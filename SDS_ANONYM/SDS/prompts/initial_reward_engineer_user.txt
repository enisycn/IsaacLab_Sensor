The Isaac Lab environment structure is:

{task_obs_code_string}

You are working with Isaac Lab's Unitree Go1 quadruped robot. The robot has the following body structure:
- Base body: "trunk" (main chassis)
- Foot bodies: "FL_foot", "FR_foot", "RL_foot", "RR_foot" (for contact detection)
- Thigh bodies: "FL_thigh", "FR_thigh", "RL_thigh", "RR_thigh" (undesired contacts)

For Isaac Lab API usage, remember these critical points:
- Velocities: Use BODY frame (robot.data.root_lin_vel_b, robot.data.root_ang_vel_b)
- Commands: Body frame velocity commands (vx, vy, omega_z)
- Contact forces: Use contact_sensor.data.net_forces_w [num_envs, num_bodies, 3]
- Contact detection: Apply torch.norm() to get force magnitudes, then use threshold
- Quaternions: Format is (w, x, y, z) for root_quat_w
- Device compatibility: Ensure all tensors use device=env.device
- Additional data: robot.data.root_lin_vel_w, robot.data.root_ang_vel_w, robot.data.applied_torque

## Task Analysis

Based on the video demonstration, analyze the following aspects and design your reward function accordingly:

**Movement Pattern Analysis:**
- What type of gait is being demonstrated?
- What velocity characteristics are shown?
- How does the body height change during movement?
- What contact patterns are observed?
- How does the body orientation change?

**Reward Design Considerations:**
- Design velocity tracking based on observed movement speed
- Consider height dynamics appropriate for the demonstrated gait
- Reward contact patterns that match the observed locomotion
- Balance stability with the dynamic requirements shown in the video

Remember to analyze the video frames carefully to understand what behavior needs to be rewarded, rather than assuming fixed requirements.

## Task Requirements

**Key Analysis Points:**
- **Movement Pattern:** Observe speed, direction, and trajectory characteristics
- **Height Dynamics:** Does the robot maintain constant height or show vertical motion patterns?
- **Contact Behavior:** Analyze ground contact patterns - continuous, intermittent, or aerial phases
- **Body Orientation:** Observe natural body tilting vs upright posture requirements
- **Gait Characteristics:** Identify if the gait is conservative/stable or dynamic/agile

Write a reward function that encourages the robot to exhibit the behavior demonstrated in the video frames.

Your reward function must return a single torch.Tensor with shape [num_envs] containing the total reward for each environment.

IMPORTANT: Provide ONLY the Python code wrapped in ```python ``` blocks. Do NOT include explanations, analysis, or commentary. The system will automatically extract your code.